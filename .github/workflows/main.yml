name: CI

env:
  JDK_VERSION: '17'
  JDK_DISTRIBUTION: 'temurin'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
          cache: gradle

      - name: Run lint check
        run: ./gradlew lintDebug

      - name: Upload html lint report
        uses: actions/upload-artifact@v3
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
          cache: gradle

      - name: Run tests
        run: ./gradlew test

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-report
          path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [ unit-test ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [ 29 ]
    steps:

      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
          cache: gradle

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: instrumentation-test-report
          path: app/build/reports/androidTests/connected/

  packaging:
    needs: [ unit-test ]
    name: Generate Apk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
          cache: gradle

      - name: Build debug Apk
        run: ./gradlew assembleDebug --stacktrace

      - name: Rename the generated APK
        run: cp app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/clock-debug.apk

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: debug-build
          path: app/build/outputs/apk/debug/clock-debug.apk